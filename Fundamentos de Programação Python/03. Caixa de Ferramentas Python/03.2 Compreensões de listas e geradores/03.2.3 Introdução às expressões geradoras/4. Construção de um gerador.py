"""
Construção de um gerador

Nos exercícios anteriores, você lidou principalmente com a escrita de expressões geradoras, que usam a sintaxe de compreensão. 
A possibilidade de usar a sintaxe de compreensão para expressões geradoras facilitou muito o seu trabalho!

Agora, lembre-se de que você viu no vídeo que não existem apenas expressões geradoras, mas também funções geradoras. 
As funções geradoras são funções que, como as expressões geradoras, produzem uma série de valores, em vez de retornar um único valor. 
Uma função geradora é definida da mesma forma que você define uma função normal, mas sempre que gera um valor, ela usa a palavra-chave yield em vez de return.

Neste exercício, você criará uma função geradora com um mecanismo semelhante ao da expressão geradora que definiu no exercício anterior:

lengths = (len(person) for person in lannister)

Instruções:
1. Complete o cabeçalho da função get_lengths() que tem um único parâmetro, input_list.
2. No loop for na definição da função, yield o comprimento das strings em input_list.
3. Complete a parte iterável do loop for para imprimir os valores gerados pela função geradora get_lengths(). 
   Forneça a chamada para get_lengths(), passando a lista lannister.
"""

# --- Código abaixo ---

# Create a list of strings
lannister = ['cersei', 'jaime', 'tywin', 'tyrion', 'joffrey']

# Define generator function get_lengths
def get_lengths(input_list):
    """Generator function that yields the
    length of the strings in input_list."""

    # Yield the length of a string
    for person in input_list:
        yield len(person)

# Print the values generated by get_lengths()
for value in get_lengths(lannister):
    print(value)